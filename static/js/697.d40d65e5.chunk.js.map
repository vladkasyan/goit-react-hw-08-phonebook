{"version":3,"file":"static/js/697.d40d65e5.chunk.js","mappings":"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","sources":["components/App.module.jsx","../node_modules/nanoid/index.browser.js","components/phoneBook/phoneBook.module.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/selectors.jsx","redux/contacts/selectors.jsx","components/phoneBook/phoneBook.jsx","components/contacts/contacts.module.jsx","components/contacts/contacts.jsx","components/filter/filter.module.jsx","components/filter/filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Body = styled.div`\n  background: linear-gradient(\n    90deg,\n    rgba(23, 18, 110, 1) 0%,\n    rgba(128, 128, 198, 1) 36%,\n    rgba(128, 174, 184, 1) 92%\n  );\n  background-size: 200% 200%;\n  animation: gradient 10s ease infinite;\n  @keyframes gradient {\n    0% {\n      background-position: 0 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0 50%;\n    }\n  }\n  padding-top: 20px;\n  height: 100%;\n  padding-bottom: 355px;\n`;\n\nexport const Placeholder = styled.div`\n  font-size: 50px;\n  color: white;\n  text-align: center;\n  margin-top: 150px;\n`;\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const Forms = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 12px 14px;\n  max-width: 600px;\n\n  margin-left: auto;\n  margin-right: auto;\n  border: 2px solid #000000;\n  border-radius: 4px;\n  background: linear-gradient(\n    90deg,\n    rgba(17, 14, 83, 1) 0%,\n    rgba(97, 97, 150, 1) 36%,\n    rgba(98, 134, 142, 1) 92%\n  );\n  background-size: 200% 200%;\n  animation: gradient 10s ease infinite;\n  @keyframes gradient {\n    0% {\n      background-position: 0 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0 50%;\n    }\n  }\n  border: transparent;\n`;\n\nexport const Button = styled.button`\n  padding: 10px 12px;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 20px;\n  margin-top: 15px;\n\n  border: 3px solid transperent;\n  background-color: #201c1c;\n  color: white;\n  opacity: 1;\n  transition: border 0.5s cubic-bezier(0.075, 0.82, 0.165, 1),\n    background-color 1s cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  &:active {\n    background-color: #4c237a;\n    border: 3px solid #ffffff;\n  }\n\n  &:hover {\n    background-color: #3d327a;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  text-align: center;\n  color: white;\n`;\n\nexport const Label = styled.label`\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  gap: 5px;\n\n  margin-bottom: 10px;\n  color: white;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 12px;\n  max-width: 300px;\n  background-color: #201c1c;\n  color: white;\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const getFilter = state => state.filter.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { getFilter } from '../filter/selectors';\n\nexport const selectContactsItems = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContactsItems, getFilter],\n  (contactsItems, filter) => {\n    return contactsItems.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { nanoid } from 'nanoid';\nimport { Forms, Label, Button, Input, Title } from './phoneBook.module';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { selectContactsItems } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\n\nexport const PhoneBook = () => {\n  const contacts = useSelector(selectContactsItems);\n\n  const dispatch = useDispatch();\n\n  const toastOptions = {\n    duration: 2000,\n    position: 'top-right',\n  };\n\n  const checkDublicate = name => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      toast.error(`${name} is already in contacts`, toastOptions);\n\n      return true;\n    }\n  };\n\n  const submitForm = event => {\n    event.preventDefault();\n    const { name, number } = event.target.elements;\n\n    if (checkDublicate(name.value)) return;\n\n    dispatch(addContact({ name: name.value, number: number.value })).then(\n      toast.success(\n        `${name.value} has succesfully added to your phonebook`,\n        toastOptions\n      )\n    );\n\n    event.target.reset();\n  };\n\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  return (\n    <Forms onSubmit={submitForm}>\n      <Toaster />\n      <Title>Phonebook</Title>\n      <Label htmlFor={nameId}>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label htmlFor={numberId}>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n\n      <Button type=\"submit\">Add contact </Button>\n    </Forms>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Listbutton = styled.button`\n  padding: 2px 8px;\n  cursor: pointer;\n  width: 100px;\n  height: 27px;\n\n  border-radius: 10%;\n  border: none;\n  background-color: #201c1c;\n  color: white;\n  transition: border 0.5s cubic-bezier(0.075, 0.82, 0.165, 1),\n    background-color 1s cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  &:hover {\n    background-color: #3d327a;\n  }\n\n  &:active {\n    background-color: #4c237a;\n    border: 3px solid #ffffff;\n  }\n`;\n\nexport const Listitem = styled.li`\n  width: calc((100% - 40px) / 5);\n  height: 70px;\n  gap: 10px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-between;\n  font-size: 18px;\n\n  border: 3px solid #000000;\n  padding: 16px;\n  border-radius: 4px;\n  margin-bottom: 5px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  min-width: 400px;\n  padding: 12px 14px;\n  flex-wrap: wrap;\n  gap: 47px;\n\n  border-radius: 4px;\n  border: transparent;\n  list-style: none;\n`;\n","import React from 'react';\nimport { List, Listitem, Listbutton } from './contacts.module';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/filter/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectContactsItems } from '../../redux/contacts/selectors';\n\nexport const Contacts = () => {\n  const contacts = useSelector(selectContactsItems);\n\n  const filters = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filters.toLowerCase())\n    );\n  };\n  const VisibleContacts = getVisibleContacts();\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n  return (\n    <List>\n      {VisibleContacts.map(contact => (\n        <Listitem key={contact.id}>\n          {contact.name + ' : ' + contact.number}\n\n          {\n            <Listbutton\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => handleDelete(contact.id)}\n            >\n              delete\n            </Listbutton>\n          }\n        </Listitem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  /* margin: 0 auto; */\n  border-radius: 4px;\n  border: 2px solid #000000;\n  padding: 7px 10px;\n  width: 600px;\n  background-color: #201c1c;\n  color: white;\n`;\n\nexport const Label = styled.label`\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 20px;\n  gap: 5px;\n\n  margin-bottom: 10px;\n  color: white;\n`;\n\nexport const Box = styled.div`\n  margin-top: 10px;\n  max-width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Title = styled.h1`\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  text-align: center;\n  color: white;\n`;\n","import React from 'react';\nimport { Label, Input, Box, Title } from './filter.module';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/filter/selectors';\nimport { setFilter } from '../../redux/filter/filtersSlice';\nimport { selectContactsItems } from '../../redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filters = useSelector(getFilter);\n\n  const contacts = useSelector(selectContactsItems);\n\n  const dispatch = useDispatch();\n\n  const filterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Box>\n      <Title>Contacts</Title>\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          value={filters}\n          onChange={filterChange}\n          disabled={contacts.length === 0}\n        />\n      </Label>\n    </Box>\n  );\n};\n","import { Body, Placeholder } from '../components/App.module';\nimport toast from 'react-hot-toast';\nimport { PhoneBook } from '../components/phoneBook/phoneBook';\nimport { Contacts } from '../components/contacts/contacts';\nimport { Filter } from '../components/filter/filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../redux/contacts/operations';\nimport Loader from '../components/loader/loader';\n\nimport {\n  selectError,\n  selectContactsItems,\n  selectIsLoading,\n} from '../redux/contacts/selectors';\nimport { useEffect } from 'react';\n\nexport default function Contactss() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContactsItems);\n\n  const isLoading = useSelector(selectIsLoading);\n\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (error === 'ERR_BAD_REQUEST') {\n      toast.error('There are some problems! Try again later.');\n      return;\n    }\n    if (error) {\n      toast.error(error);\n    }\n  }, [error]);\n\n  return (\n    <Body>\n      {isLoading && <Loader />}\n      <PhoneBook />\n      {!!contacts.length ? (\n        <Filter />\n      ) : (\n        <Placeholder>Your phonebook is empty. Add first contact!</Placeholder>\n      )}\n      {isLoading || (!!contacts.length && <Contacts />)}\n    </Body>\n  );\n}\n"],"names":["Body","styled","_templateObject","_taggedTemplateLiteral","Placeholder","_templateObject2","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Forms","Button","Title","_templateObject3","Label","_templateObject4","Input","_templateObject5","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getFilter","state","filter","selectContactsItems","contacts","items","selectIsLoading","isLoading","selectError","error","contactsItems","item","toLowerCase","includes","PhoneBook","useSelector","dispatch","useDispatch","toastOptions","duration","position","nameId","numberId","_jsxs","onSubmit","event","preventDefault","_event$target$element","target","elements","number","contact","toast","checkDublicate","addContact","then","reset","children","_jsx","Toaster","htmlFor","type","title","required","Listbutton","Listitem","List","Contacts","filters","VisibleContacts","onClick","contactId","deleteContact","Box","Filter","onChange","e","setFilter","disabled","Contactss","useEffect","getContacts","Loader"],"sourceRoot":""}